-- Options table for Beyond Ultra Graphics AddOn.
local addonName, addon = ...
local L = LibStub("AceLocale-3.0"):GetLocale("BeyondUltraGraphics")

-- Function to get the options table
function GetBeyondUltraGraphicsOptions()
	local options = {
		name = addonName,
		handler = BeyondUltraGraphics,
		type = "group",
		args = {
			addOnBehavior = {
				name = L["AddOn Behavior"],
				order = 1,
				type = "header",
			},
			enableBeyondUltraGraphics = {
				name = "|cffffffff" .. L["Enable Beyond Ultra Graphics"],
				desc = "|cffffd200" .. L["Toggles Beyond Ultra Graphics functionality.\n\nDisabling this option will have no effect on (console variable) graphical settings after they have already been applied, but will prevent them from being reapplied in the future upon entering the world.\n\nConsole variables will be reset if any graphical settings are changed from the Video options menu."],
				order = 2,
				type = "toggle",
				width = "double",
				get = function() return BeyondUltraGraphics:GetSettings().enableBeyondUltraGraphics end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("enableBeyondUltraGraphics", value) end,
			},
			debugMode = {
				name = "|cffffffff" .. L["Debug Mode"],
				desc = "|cffffd200" .. L["Toggles debug mode.\n\nWhile debug mode is enabled, console variable application messages will be displayed in the chat for all console variables."],
				order = 3,
				type = "toggle",
				width = "double",
				get = function() return BeyondUltraGraphics:GetSettings().debugMode end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("debugMode", value) end,
			},
			spacer1 = {
				name = " ",
				desc = " ",
				order = 4,
				type = "description",
				fontSize = "large",
				width = "full",
			},
			consoleVariableLoginDelay = {
				name = "|cffffffff" .. L["Console Variable Application Login Delay"],
				desc = "|cffffd200" .. L["Determines the amount of time (in seconds) to wait after a player enters the world before applying console variables."],
				order = 5,
				type = "range",
				min = 1,
				max = 120,
				softMin = 1,
				softMax = 20,
				step = 1,
				width = "double",
				get = function() return BeyondUltraGraphics:GetSettings().consoleVariableLoginDelay end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("consoleVariableLoginDelay", value) end,
			},
			spacer2 = {
				name = " ",
				desc = " ",
				order = 6,
				type = "description",
				fontSize = "large",
				width = "full",
			},
			displayReloadPromptUponEnteringTheWorld = {
				name = "|cffffffff" .. L["Display Reload Prompt Upon Entering the World"],
				desc = "|cffffd200" .. L["Displays a reload prompt upon entering the world.\n\nThis can be useful for reloading textures that have not been fully loaded upon entering the world.\n\nThis option can be enabled even if "] .. "|cff" .. L["00ccff"] .. L["Beyond Ultra Graphics"] .. "|cffffd200" .. L[" is disabled."],
				order = 7,
				type = "toggle",
				width = "double",
				get = function() return BeyondUltraGraphics:GetSettings().displayReloadPromptUponEnteringTheWorld end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("displayReloadPromptUponEnteringTheWorld", value) end,
			},
			reloadPromptLoginDelay = {
				name = "|cffffffff" .. L["Reload Prompt Login Delay"],
				desc = "|cffffd200" .. L["Determines the amount of time (in seconds) to wait after a player enters the world before displaying the reload prompt."],
				order = 8,
				type = "range",
				min = 1,
				max = 120,
				softMin = 1,
				softMax = 20,
				step = 1,
				width = "double",
				get = function() return BeyondUltraGraphics:GetSettings().reloadPromptLoginDelay end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("reloadPromptLoginDelay", value) end,
			},
			spacer3 = {
				name = " ",
				desc = " ",
				order = 9,
				type = "description",
				fontSize = "large",
				width = "full",
			},
			spacer4 = {
				name = " ",
				desc = " ",
				order = 10,
				type = "description",
				fontSize = "medium",
				width = "full",
			},
			clientOptions = {
				name = L["Client Options"],
				order = 20,
				type = "header",
			},
			M2FasterToggle = {
				name = "|cffffffff" .. L["M2Faster"],
				desc = "|cffffd200" .. L["Toggles applying the "] .. L["M2Faster"] .. L[" console variable upon entering the world."],
				order = 21,
				type = "toggle",
				get = function() return BeyondUltraGraphics:GetSettings().M2FasterToggle end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("M2FasterToggle", value) end,
			},
			M2Faster = {
				name = "|cffffffff" .. L["M2Faster"] .. " " .. L["Value"],
				desc = "|cffffd200" .. L["Determines the amount of cores the CPU will utilize to perform scene optimizations."] .. "\n\n|cffffd2001 = |cffff4040" .. L["Single-Core"] .. "\n|cffffd2002 = |cffffff42" .. L["Dual-Core"] .. "\n|cffffd2003 = |cff42ff42" .. L["Quad-Core"] .. "\n\n|cffffd200" .. L["It is recommended to return this option to a value of "] .. "|cff" .. L["00ccff"] .. "1|cffffd200" .. L[" if you encounter any issues, although this is unlikely on modern hardware."] .. "\n\n|cff" .. L["00ccff"] .. L["Client Default:"] .. " 1",
				order = 22,
				type = "range",
				min = 1,
				max = 3,
				step = 1,
				get = function() return BeyondUltraGraphics:GetSettings().M2Faster end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("M2Faster", value) end,
			},
			maxFPSToggle = {
				name = "|cffffffff" .. L["maxFPS"],
				desc = "|cffffd200" .. L["Toggles applying the "] .. L["maxFPS"] .. L[" console variable upon entering the world."],
				order = 23,
				type = "toggle",
				get = function() return BeyondUltraGraphics:GetSettings().maxFPSToggle end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("maxFPSToggle", value) end,
			},
			maxFPS = {
				name = "|cffffffff" .. L["maxFPS"] .. " " .. L["Value"],
				desc = "|cffffd200" .. L["Determines the maximum FPS the client will display.\n\nHigher values will allow the client to display a higher FPS. This option has no effect when Vertical Sync is enabled."] .. "\n\n|cff" .. L["00ccff"] .. L["Client Default:"] .. " 200",
				order = 24,
				type = "range",
				min = 20,
				max = 500,
				softMin = 30,
				softMax = 240,
				step = 1,
				get = function() return BeyondUltraGraphics:GetSettings().maxFPS end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("maxFPS", value) end,
			},
			maxFPSBkToggle = {
				name = "|cffffffff" .. L["maxFPSBk"],
				desc = "|cffffd200" .. L["Toggles applying the "] .. L["maxFPSBk"] .. L[" console variable upon entering the world."],
				order = 25,
				type = "toggle",
				get = function() return BeyondUltraGraphics:GetSettings().maxFPSBkToggle end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("maxFPSBkToggle", value) end,
			},
			maxFPSBk = {
				name = "|cffffffff" .. L["maxFPSBk"] .. " " .. L["Value"],
				desc = "|cffffd200" .. L["Determines the maximum FPS the client will display when it is not the active window.\n\nHigher values will allow the client to display a higher FPS when the client is not the active window, which will only impact performance outside of the client."] .. "\n\n|cff" .. L["00ccff"] .. L["Client Default:"] .. " 30",
				order = 26,
				type = "range",
				min = 10,
				max = 500,
				softMin = 10,
				softMax = 120,
				step = 1,
				get = function() return BeyondUltraGraphics:GetSettings().maxFPSBk end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("maxFPSBk", value) end,
			},
			screenshotQualityToggle = {
				name = "|cffffffff" .. L["screenshotQuality"],
				desc = "|cffffd200" .. L["Toggles applying the "] .. L["screenshotQuality"] .. L[" console variable upon entering the world."],
				order = 27,
				type = "toggle",
				get = function() return BeyondUltraGraphics:GetSettings().screenshotQualityToggle end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("screenshotQualityToggle", value) end,
			},
			screenshotQuality = {
				name = "|cffffffff" .. L["screenshotQuality"] .. " " .. L["Value"],
				desc = "|cffffd200" .. L["Determines the image quality of screenshots.\n\nHigher values will allow for higher quality screenshots, but will consume more disk space."] .. "\n\n|cff" .. L["00ccff"] .. L["Client Default:"] .. " 3",
				order = 28,
				type = "range",
				min = 1,
				max = 10,
				step = 1,
				get = function() return BeyondUltraGraphics:GetSettings().screenshotQuality end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("screenshotQuality", value) end,
			},
			violenceLevelToggle = {
				name = "|cffffffff" .. L["violenceLevel"],
				desc = "|cffffd200" .. L["Toggles applying the "] .. L["violenceLevel"] .. L[" console variable upon entering the world."],
				order = 29,
				type = "toggle",
				get = function() return BeyondUltraGraphics:GetSettings().violenceLevelToggle end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("violenceLevelToggle", value) end,
			},
			violenceLevel = {
				name = "|cffffffff" .. L["violenceLevel"] .. " " .. L["Value"],
				desc = "|cffffd200" .. L["Determines the violence level during combat."] .. "\n\n0 = |cff" .. L["9d9d9d"] .. L["No Blood or Combat Effects"] .. "\n|cffffd2001 = |cff" .. L["1eff00"] .. L["Green Blood"] .. "\n|cffffd2002 = |cff" .. L["b93c3c"] .. L["Bloody"] .. "\n|cffffd2003 = |cff" .. L["d13e3e"] .. L["Very Bloody"] .. "\n|cffffd2004 = |cff" .. L["e84040"] .. L["Exceptionally Bloody"] .. "\n|cffffd2005 = |cff" .. L["ff4242"] .. L["Extremely Bloody"] .. "\n\n|cffffd200" .. L["It should be noted that the use of a custom patch to modify blood splatter may negate this option."] .. "\n\n" .. "|cff" .. L["00ccff"] .. L["Client Default:"] .. " 2",
				order = 30,
				type = "range",
				min = 0,
				max = 5,
				step = 1,
				get = function() return BeyondUltraGraphics:GetSettings().violenceLevel end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("violenceLevel", value) end,
			},
			spacer5 = {
				name = " ",
				desc = " ",
				order = 31,
				type = "description",
				fontSize = "large",
				width = "full",
			},
			spacer6 = {
				name = " ",
				desc = " ",
				order = 32,
				type = "description",
				fontSize = "medium",
				width = "full",
			},
			viewDistance = {
				name = L["View Distance"],
				order = 40,
				type = "header",
			},
			farclipToggle = {
				name = "|cffffffff" .. L["farclip"],
				desc = "|cffffd200" .. L["Toggles applying the "] .. L["farclip"] .. L[" console variable upon entering the world."],
				order = 41,
				type = "toggle",
				get = function() return BeyondUltraGraphics:GetSettings().farclipToggle end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("farclipToggle", value) end,
			},
			farclip = {
				name = "|cffffffff" .. L["farclip"] .. " " .. L["Value"],
				desc = "|cffffd200" .. L["Determines view distance.\n\nHigher values show terrain at greater distances, but may have a high impact on performance.\n\nIt should be noted that different continents have different maximum view distances that are unable to be overridden by this value, unless modified by a custom patch."] .. "\n\n|cff" .. L["00ccff"] .. L["Ultra Preset Default:"] .. " 1277",
				order = 42,
				type = "range",
				min = 77,
				max = 1677,
				step = 100,
				get = function() return BeyondUltraGraphics:GetSettings().farclip end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("farclip", value) end,
			},
			horizonFarclipScaleToggle = {
				name = "|cffffffff" .. L["horizonFarclipScale"],
				desc = "|cffffd200" .. L["Toggles applying the "] .. L["horizonFarclipScale"] .. L[" console variable upon entering the world."],
				order = 43,
				type = "toggle",
				get = function() return BeyondUltraGraphics:GetSettings().horizonFarclipScaleToggle end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("horizonFarclipScaleToggle", value) end,
			},
			horizonFarclipScale = {
				name = "|cffffffff" .. L["horizonFarclipScale"] .. " " .. L["Value"],
				desc = "|cffffd200" .. L["Determines horizon terrain outline view distance.\n\nHigher values allow terrain outlines to draw from greater distances, but may have a moderate impact on performance."] .. "\n\n|cff" .. L["00ccff"] .. L["Client Default:"] .. " 4",
				order = 44,
				type = "range",
				min = 4,
				max = 6,
				step = 0.1,
				get = function() return BeyondUltraGraphics:GetSettings().horizonFarclipScale end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("horizonFarclipScale", value) end,
			},
			objectFadeToggle = {
				name = "|cffffffff" .. L["objectFade"],
				desc = "|cffffd200" .. L["Toggles applying the "] .. L["objectFade"] .. L[" console variable upon entering the world."],
				order = 45,
				type = "toggle",
				get = function() return BeyondUltraGraphics:GetSettings().objectFadeToggle end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("objectFadeToggle", value) end,
			},
			objectFade = {
				name = "|cffffffff" .. L["Enable"] .. " " .. L["objectFade"],
				desc = "|cffffd200" .. L["Determines the visibility of the fadein visual effect of distant world objects.\n\nEnabling this option will allow world objects to fade in smoothly, but from shorter distances.\n\nDisabling this option will cause world objects to appear abruptly, but from much greater distances."] .. "\n\n|cff" .. L["00ccff"] .. L["Client Default:"] .. " Enabled",
				order = 46,
				type = "toggle",
				get = function() return BeyondUltraGraphics:GetSettings().objectFade == 1 end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("objectFade", value and 1 or 0) end,
			},
			spacer7 = {
				name = " ",
				desc = " ",
				order = 47,
				type = "description",
				fontSize = "large",
				width = "full",
			},
			spacer8 = {
				name = " ",
				desc = " ",
				order = 48,
				type = "description",
				fontSize = "medium",
				width = "full",
			},
			environmentDetail = {
				name = L["Environment Detail"],
				order = 60,
				type = "header",
			},
			groundEffectDensityToggle = {
				name = "|cffffffff" .. L["groundEffectDensity"],
				desc = "|cffffd200" .. L["Toggles applying the "] .. L["groundEffectDensity"] .. L[" console variable upon entering the world."],
				order = 61,
				type = "toggle",
				get = function() return BeyondUltraGraphics:GetSettings().groundEffectDensityToggle end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("groundEffectDensityToggle", value) end,
			},
			groundEffectDensity = {
				name = "|cffffffff" .. L["groundEffectDensity"] .. " " .. L["Value"],
				desc = "|cffffd200" .. L["Determines the amount of ground clutter items, such as grass and foliage.\n\nHigher values show more ground clutter, but may have a moderate impact on performance."] .. "\n\n|cff" .. L["00ccff"] .. L["Ultra Preset Default:"] .. " 64",
				order = 62,
				type = "range",
				min = 16,
				max = 256,
				step = 8,
				get = function() return BeyondUltraGraphics:GetSettings().groundEffectDensity end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("groundEffectDensity", value) end,
			},
			SkyCloudLODToggle = {
				name = "|cffffffff" .. L["SkyCloudLOD"],
				desc = "|cffffd200" .. L["Toggles applying the "] .. L["SkyCloudLOD"] .. L[" console variable upon entering the world."],
				order = 63,
				type = "toggle",
				get = function() return BeyondUltraGraphics:GetSettings().SkyCloudLODToggle end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("SkyCloudLODToggle", value) end,
			},
			SkyCloudLOD = {
				name = "|cffffffff" .. L["SkyCloudLOD"] .. " " .. L["Value"],
				desc = "|cffffd200" .. L["Determines the level of depth applied to clouds in the sky.\n\nHigher values will allow for more detailed clouds, but may have a slight impact on performance."] .. "\n\n|cff" .. L["00ccff"] .. L["Client Default:"] .. " 0",
				order = 64,
				type = "range",
				min = 0,
				max = 3,
				step = 1,
				get = function() return BeyondUltraGraphics:GetSettings().SkyCloudLOD end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("SkyCloudLOD", value) end,
			},
			showfootprintsToggle = {
				name = "|cffffffff" .. L["showfootprints"],
				desc = "|cffffd200" .. L["Toggles applying the "] .. L["showfootprints"] .. L[" console variable upon entering the world."],
				order = 65,
				type = "toggle",
				get = function() return BeyondUltraGraphics:GetSettings().showfootprintsToggle end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("showfootprintsToggle", value) end,
			},
			showfootprints = {
				name = "|cffffffff" .. L["Enable"] .. " " .. L["showfootprints"],
				desc = "|cffffd200" .. L["Determines the visibility of footprints on soft ground surfaces (such as sand or snow)."] .. "\n\n|cff" .. L["00ccff"] .. L["Client Default:"] .. " Enabled",
				order = 66,
				type = "toggle",
				get = function() return BeyondUltraGraphics:GetSettings().showfootprints == 1 end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("showfootprints", value and 1 or 0) end,
			},
			showfootprintparticlesToggle = {
				name = "|cffffffff" .. L["showfootprintparticles"],
				desc = "|cffffd200" .. L["Toggles applying the "] .. L["showfootprintparticles"] .. L[" console variable upon entering the world."],
				order = 67,
				type = "toggle",
				get = function() return BeyondUltraGraphics:GetSettings().showfootprintparticlesToggle end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("showfootprintparticlesToggle", value) end,
			},
			showfootprintparticles = {
				name = "|cffffffff" .. L["Enable"] .. " " .. L["showfootprintparticles"],
				desc = "|cffffd200" .. L["Determines the visibility of footprint particles."] .. "\n\n|cff" .. L["00ccff"] .. L["Client Default:"] .. " Enabled",
				order = 68,
				type = "toggle",
				get = function() return BeyondUltraGraphics:GetSettings().showfootprintparticles == 1 end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("showfootprintparticles", value and 1 or 0) end,
			},
			spacer9 = {
				name = " ",
				desc = " ",
				order = 69,
				type = "description",
				fontSize = "large",
				width = "full",
			},
			spacer10 = {
				name = " ",
				desc = " ",
				order = 70,
				type = "description",
				fontSize = "medium",
				width = "full",
			},
			accessibilityOptions = {
				name = L["Accessibility Options"],
				order = 80,
				type = "header",
			},
			characterAmbientToggle = {
				name = "|cffffffff" .. L["characterAmbient"],
				desc = "|cffffd200" .. L["Toggles applying the "] .. L["characterAmbient"] .. L[" console variable upon entering the world."],
				order = 81,
				type = "toggle",
				get = function() return BeyondUltraGraphics:GetSettings().characterAmbientToggle end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("characterAmbientToggle", value) end,
			},
			characterAmbient = {
				name = "|cffffffff" .. L["characterAmbient"] .. " " .. L["Value"],
				desc = "|cffffd200" .. L["Determines (inversely) the amount of ambient light that should apply to player and creature models.\n\nHigher values will cause applicable models to appear brighter at all times, while lower values will cause models to appear more natural."] .. "\n\n|cff" .. L["00ccff"] .. L["Client Default:"] .. " 0",
				order = 82,
				type = "range",
				min = 0,
				max = 1,
				step = 0.1,
				get = function() return BeyondUltraGraphics:GetSettings().characterAmbient end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("characterAmbient", value) end,
			},
			ffxNetherWorldToggle = {
				name = "|cffffffff" .. L["ffxNetherWorld"],
				desc = "|cffffd200" .. L["Toggles applying the "] .. L["ffxNetherWorld"] .. L[" console variable upon entering the world."],
				order = 83,
				type = "toggle",
				get = function() return BeyondUltraGraphics:GetSettings().ffxNetherWorldToggle end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("ffxNetherWorldToggle", value) end,
			},
			ffxNetherWorld = {
				name = "|cffffffff" .. L["Enable"] .. " " .. L["ffxNetherWorld"],
				desc = "|cffffd200" .. L["Determines the visibility of the Nether World visual effect (usually applied when consuming an Invisibility Potion or casting Invisibility as a Mage).\n\nDisabling this option will hide the swaying distortion effect entirely, but still feature the darkened blue world lighting."] .. "\n\n|cff" .. L["00ccff"] .. L["Client Default:"] .. " Enabled",
				order = 84,
				type = "toggle",
				get = function() return BeyondUltraGraphics:GetSettings().ffxNetherWorld == 1 end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("ffxNetherWorld", value and 1 or 0) end,
			},
			ffxSpecialToggle = {
				name = "|cffffffff" .. L["ffxSpecial"],
				desc = "|cffffd200" .. L["Toggles applying the "] .. L["ffxSpecial"] .. L[" console variable upon entering the world."],
				order = 85,
				type = "toggle",
				get = function() return BeyondUltraGraphics:GetSettings().ffxSpecialToggle end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("ffxSpecialToggle", value) end,
			},
			ffxSpecial = {
				name = "|cffffffff" .. L["Enable"] .. " " .. L["ffxSpecial"],
				desc = "|cffffd200" .. L["Determines the visibility of some (fullscreen) visual effects (such as the haze effect in the Borean Tundra)."] .. "\n\n|cff" .. L["00ccff"] .. L["Client Default:"] .. " Enabled",
				order = 86,
				type = "toggle",
				get = function() return BeyondUltraGraphics:GetSettings().ffxSpecial == 1 end,
				set = function(_, value) BeyondUltraGraphics:UpdateSetting("ffxSpecial", value and 1 or 0) end,
			},
		},
	}
	return options
end